"""
Константы summary и description для эндпоинтов, сгруппированные по классам.
"""

class MeetingRoomConstants:
    CREATE_SUMMARY = 'Создать переговорную комнату'
    CREATE_DESCRIPTION = (
        'Создаёт новую переговорную комнату. Только для суперпользователей.\n\n'
        'Пример запроса:\n'
        '{"name": "Room 101", "description": "Большая комната"}\n\n'
        'Ответ: созданная комната.\n'
        'Ошибки: 422 — комната с таким именем уже существует.'
    )
    GET_ALL_SUMMARY = 'Получить все переговорные комнаты'
    GET_ALL_DESCRIPTION = (
        'Возвращает список всех переговорных комнат.\n\n'
        'Ответ: список объектов MeetingRoomDB.'
    )
    UPDATE_SUMMARY = 'Обновить переговорную комнату'
    UPDATE_DESCRIPTION = (
        'Частично обновляет переговорную комнату по ID. Только для суперпользователей.\n\n'
        'Пример запроса:\n'
        '{"name": "Room 102"}\n\n'
        'Ответ: обновлённая комната.\n'
        'Ошибки: 404 — комната не найдена, 422 — имя не уникально.'
    )
    DELETE_SUMMARY = 'Удалить переговорную комнату'
    DELETE_DESCRIPTION = (
        'Удаляет переговорную комнату по ID. Только для суперпользователей.\n\n'
        'Ответ: удалённая комната.\n'
        'Ошибки: 404 — комната не найдена.'
    )
    GET_RESERVATIONS_SUMMARY = 'Бронирования для комнаты'
    GET_RESERVATIONS_DESCRIPTION = (
        'Возвращает список будущих бронирований для выбранной переговорной комнаты.\n\n'
        'Ответ: список объектов ReservationDB.\n'
        'Ошибки: 404 — комната не найдена.'
    )

class ReservationConstants:
    CREATE_SUMMARY = 'Создать бронирование'
    CREATE_DESCRIPTION = (
        'Создаёт новое бронирование переговорной комнаты.\n\n'
        'Пример запроса:\n'
        '{"meetingroom_id": 1, "date_start": "2024-06-01T10:00:00", "date_end": "2024-06-01T11:00:00"}\n\n'
        'Ответ: созданное бронирование.\n'
        'Ошибки: 404 — комната не найдена, 422 — пересечение бронирований.'
    )
    GET_ALL_SUMMARY = 'Получить все бронирования'
    GET_ALL_DESCRIPTION = (
        'Возвращает список всех бронирований. Только для суперпользователей.\n\n'
        'Ответ: список объектов ReservationDB.'
    )
    DELETE_SUMMARY = 'Удалить бронирование'
    DELETE_DESCRIPTION = (
        'Удаляет бронирование по ID. Только владелец или суперпользователь.\n\n'
        'Ответ: удалённое бронирование.\n'
        'Ошибки: 404 — бронь не найдена, 403 — нет прав.'
    )
    UPDATE_SUMMARY = 'Обновить бронирование'
    UPDATE_DESCRIPTION = (
        'Обновляет бронирование по ID. Только владелец или суперпользователь.\n\n'
        'Пример запроса:\n'
        '{"date_start": "2024-06-01T12:00:00", "date_end": "2024-06-01T13:00:00"}\n\n'
        'Ответ: обновлённое бронирование.\n'
        'Ошибки: 404 — бронь не найдена, 403 — нет прав, 422 — пересечение бронирований.'
    )
    GET_MY_SUMMARY = 'Мои бронирования'
    GET_MY_DESCRIPTION = (
        'Возвращает список всех бронирований текущего пользователя.\n\n'
        'Ответ: список объектов ReservationDB.'
    )

class UserConstants:
    AUTH_SUMMARY = 'JWT-аутентификация'
    AUTH_DESCRIPTION = (
        'Аутентификация пользователя по JWT-токену.\n\n'
        'Используйте полученный токен для доступа к защищённым эндпоинтам.'
    )
    REGISTER_SUMMARY = 'Регистрация пользователя'
    REGISTER_DESCRIPTION = (
        'Регистрация нового пользователя.\n\n'
        'Пример запроса:\n'
        '{"email": "user@example.com", "password": "string"}\n\n'
        'Ответ: созданный пользователь.'
    )
    USERS_SUMMARY = 'Работа с пользователями'
    USERS_DESCRIPTION = (
        'Получение, обновление и просмотр информации о пользователях.\n\n'
        'Некоторые операции доступны только администраторам.'
    )

class MeetingRoomDetail:
    DUPLICATE_NAME = 'Переговорка с таким именем уже существует!'
    NOT_FOUND = 'Переговорка не найдена!'

class ReservationDetail:
    INTERSECTION = 'Пересечение бронирований по времени!'
    NOT_FOUND = 'Бронь не найдена!'
    FORBIDDEN = 'Невозможно редактировать или удалить чужую бронь!'
